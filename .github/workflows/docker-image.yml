name: CI/CD Pipeline for Docker App

on:
  # Trigger the workflow on push or pull request to main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for building and testing the Docker image
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build Docker image
      run: docker build -t checkout-app .

    - name: Test Docker image (optional)
      run: |
        docker run -d -p 8080:80 checkout-app
        sleep 10
        curl http://localhost:8080
        docker stop $(docker ps -q)

  # Job for deploying to production or a cloud platform (e.g., AWS, DigitalOcean, etc.)
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' # Only deploy on main branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image to DockerHub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/checkout-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/checkout-app:latest

    - name: Deploy to production server
      run: |
        ssh -o StrictHostKeyChecking=no user@your-server-ip "docker pull ${{ secrets.DOCKER_USERNAME }}/checkout-app:latest && docker run -d -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/checkout-app:latest"

